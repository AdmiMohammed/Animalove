{% extends 'base.html.twig' %}
{% block head %}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('styles/details.css') }}">
{% endblock %}

{% block body %}
<div class="container2">
    <h1 class="page-title">Détails de la publication</h1>

    <div class="card mb-4 custom-card1">
        <img src="{{ asset('img_animals/' ~ post.image) }}" class="card-img-top animal-img" alt="Image de l'animal">
        <div class="card-body1">
            <h5 class="card-title">{{ post.animalName }}</h5>
            <p class="card-text"><strong>Espèce :</strong> {{ post.species }}</p>
            <p class="card-text"><strong>Race :</strong> {{ post.breed ?? 'Non précisé' }}</p>
            <p class="card-text"><strong>Âge :</strong> {{ post.age }} ans</p>
            <p class="card-text"><strong>Genre :</strong> {{ post.gender }}</p>
            <p class="card-text"><strong>Description :</strong> {{ post.description }}</p>
            <p class="card-text"><strong>Disponibilité :</strong> {{ post.IsAvailable ? 'Disponible' : 'Indisponible' }}</p>
            <p class="card-text"><strong>Publiée par :</strong> {{ post.userId.username }}</p>
            <p class="card-text"><strong>Email de contact :</strong> {{ post.email }}</p>
            <p class="card-text"><strong>Téléphone :</strong> {{ post.phoneNumber ?? 'Non précisé' }}</p>
        </div>
    </div>

    <a href="{{ path('post') }}" class="btn btn-secondary">Retour à mes publications</a>

    <div id="comments-section">
        <h3>Commentaires</h3>
        <ul id="comments-list">
            {% for comment in comments %}
                <li id="comment-{{ comment.id }}" class="comment-item">
                    <div class="comment-header">
                        <img src="{{ comment.user.image ? asset('img_users/' ~ comment.user.image) : asset('images/defaut.jpg') }}" 
                             alt="Image de profil" 
                             class="comment-user-img">
                        <div class="comment-user-info">
                            <strong>{{ comment.user.username }}</strong>
                            <span class="text-muted">{{ comment.createdAt|date('d/m/Y H:i') }}</span>
                        </div>
                    </div>
                    <p>{{ comment.content }}</p>
                    {% if comment.user == app.user %}
                        <button class="btn btn-sm btn-danger delete-comment" data-id="{{ comment.id }}">Supprimer</button>
                    {% endif %}
                </li>
            {% endfor %}
        </ul>
        <div id="add-comment">
            <textarea id="comment-content" class="form-control" placeholder="Ajouter un commentaire..."></textarea>
            <button id="submit-comment" class="btn btn-primary mt-2">Publier</button>
        </div>
    </div>

    <script>
        const csrfToken = "{{ csrf_token('add_comment') }}";
        const postId = "{{ post.id }}";
    </script>
  
    <script>
        document.addEventListener("DOMContentLoaded", () => {
        const commentsList = document.getElementById("comments-list");
        const commentContent = document.getElementById("comment-content");
        const submitComment = document.getElementById("submit-comment");
    
        // Ajouter un commentaire
        submitComment.addEventListener("click", () => {
            const content = commentContent.value.trim();
            if (!content) {
                alert("Le commentaire ne peut pas être vide.");
                return;
            }
    
            fetch(`/post/${postId}/comment`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "X-CSRF-TOKEN": csrfToken,
                },
                body: JSON.stringify({ content }),
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.error) {
                        alert(data.error);
                    } else {
                        const newComment = document.createElement("li");
                        newComment.id = `comment-${data.id}`;
                        newComment.innerHTML = `
                            <p><strong>${data.username}</strong>: ${data.content}</p>
                            <p class="text-muted">${data.createdAt}</p>
                            <button class="btn btn-sm btn-danger delete-comment" data-id="${data.id}">Supprimer</button>
                        `;
                        commentsList.prepend(newComment);
                        commentContent.value = "";
                    }
                });
        });
    
        // Supprimer un commentaire
        commentsList.addEventListener("click", (event) => {
            if (event.target.classList.contains("delete-comment")) {
                const commentId = event.target.dataset.id;
                fetch(`/comment/${commentId}/delete`, {
                    method: "DELETE",
                    headers: {
                        "X-CSRF-TOKEN": csrfToken,
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            const comment = document.getElementById(`comment-${commentId}`);
                            comment.remove();
                        } else {
                            alert(data.error || "Une erreur est survenue.");
                        }
                    });
            }
        });
    });
    
    </script>
    
</div>
{% endblock %}
